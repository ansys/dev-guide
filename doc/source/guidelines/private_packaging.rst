.. _testing:


Hosting Private Dependencies
============================
There will be cases in which it is necessary to pull packages that are not
ready to be hosted to the public `PyPI`_. For example, if a PyAnsys library
requires autogenerated gRPC interface files from an as-of-yet private feature
or service, this package should be hosted on a private PyPI repository.

Ansys has a private repository at `PyAnsys PyPI`_, and access is controlled via
a secret PAT, specified in the GitHub secret ``PYANSYS_PYPI_PRIVATE_PAT`` which
is only available to private and internal repositories within the `PyAnsys`_.


Upload
------
Packages can be uploaded to the private repository with the following:

.. code::

   pip install pip -U
   pip install build twine

   # 
   INDEX_URL=https://$PYANSYS_PYPI_PRIVATE_PAT@pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/simple/
   pip install ansys-<product/tool>-<library>==0.2.0 --index-url $INDEX_URL --no-dependencies

   # Upload
   export TWINE_USERNAME=PAT
   export TWINE_PASSWORD=$PYANSYS_PYPI_PRIVATE_PAT
   export TWINE_REPOSITORY_URL="https://pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/upload"

   twine upload dist/*

   python -m twine upload dist/* -p $PYANSYS_PYPI_PAT -u PAT --repository-url "https://pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi/upload"


.. _PyPI: https://pypi.org/
.. _PyAnsys PyPI: https://pkgs.dev.azure.com/pyansys/_packaging/pyansys/pypi
.. _PyAnsys: https://github.com/pyansys
