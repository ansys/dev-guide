release-pypi-private:
  name: "Release to the private PyPI repository"
  runs-on: ubuntu-latest
  needs: [build-library]
  steps:
    - name: "Release to the private PyPI repository"
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
      uses: pyansys/actions/release-pypi-private@v3
      with:
        library-name: ${{ env.LIBRARY_NAME }}
        twine-username: "__token__"
        twine-token: ${{ secrets.PYANSYS_PYPI_PRIVATE_PAT }}

release-pypi-public:
  name: "Release to the public PyPI repository"
  runs-on: ubuntu-latest
  needs: [release-pypi-private]
  steps:
    - name: "Release to the public PyPI repository"
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
      uses: pyansys/actions/release-pypi-public@v3
      with:
        library-name: ${{ env.LIBRARY_NAME }}
        twine-username: "__token__"
        twine-token: ${{ secrets.PYPI_TOKEN }}

release-gitub:
  name: "Release to GitHub"
  runs-on: ubuntu-latest
  needs: [release-pypi-public]
  steps:
    - name: "Release to GitHub"
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
      uses: pyansys/actions/release-github@v3
      with:
        library-name: ${{ env.LIBRARY_NAME }}
