doc-build:
  name: "Build project documentation"
  runs-on: ubuntu-latest
  steps:
    - name: "Build project documentation"
      uses: ansys/actions/doc-build@v4
      with:
        python-version: ${{ env.MAIN_PYTHON_VERSION }}

doc-deploy-dev:
  name: "Deploy development documentation"
  if: github.event_name == 'push'
  runs-on: ubuntu-latest
  needs: doc-build
  steps:
    - name: "Deploy development documentation"
      uses: ansys/actions/doc-deploy-dev@v4
      with:
        cname: ${{ env.CNAME }}
        token: ${{ secrets.GITHUB_TOKEN }}

doc-deploy-stable:
  name: "Deploy stable documentation"
  if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
  runs-on: ubuntu-latest
  needs: doc-deploy-dev
  steps:
    - name: "Deploy stable documentation"
      uses: ansys/actions/doc-deploy-stable@v4
      with:
        cname: ${{ env.CNAME }}
        token: ${{ secrets.GITHUB_TOKEN }}

jobs:
  doc-deploy-index:
    name: "Index the documentation and scrap using PyMeilisearch"
    runs-on: ubuntu-latest
    needs: doc-deploy
    if: github.event_name == 'push'
    steps:
      - name: Scrape the stable documentation to PyMeilisearch
        run: |
          VERSION=$(python -c "from <your-package> import __version__; print('.'.join(__version__.split('.')[:2]))")
          VERSION_MEILI=$(python -c "from <your-package> import __version__; print('-'.join(__version__.split('.')[:2]))")
          echo "Calculated VERSION: $VERSION"
          echo "Calculated VERSION_MEILI: $VERSION_MEILI"
      
      - name: "Deploy the latest documentation index"
        uses: ansys/actions/doc-deploy-index@v4.1
        with:
          cname: "<library>.docs.pyansys.com/version/$VERSION"
          index-name: "<index-name>v$VERSION_MEILI"
          host-url: "<meilisearch-host-url>"
          api-key: ${{ secrets.MEILISEARCH_API_KEY }}